{"version":3,"sources":["app.js","environment.js","main.js","todo.js","resources/index.js","C:/Users/ILIASS/Documents/AFN_AFD_A/final/src/style.css","C:/Users/ILIASS/Documents/AFN_AFD_A/final/src/app.html"],"names":["App","heading","Transitions","states","stateDescription","transitions","start","final","accepts","symbols","test","test2","test3","gamma","determinist","deter_transition","T","Q","Z","AFD_T","Array","AFD_STATE","FINALS","STARTS","F","S","eps_groupe","eps_state","nbr","debug","w","P","finale","etatfinal","etatinit","addState","push","removeState","state","index","indexOf","splice","addTransition","transitionSymbole","transitionSource","transitionTarget","i","length","removeTransition","transition","state_fermeture","tab","includes","source","symbole","target","groupe_fermeture","table","l","vider_eps","pop","state_place","descr","j","description","lancer_programme","dfa_conversion1","dfa_conversion2","groupes","toString","doubles","Math","floor","random","alpha","split","beta","k","slice","m","beta1","filter","elem","self","beta_state","dfa_states","dfa_trans","charCodeAt","minimization","pos","ts","nbrpar","t","s","deb","par","n","getCol","q","matrix","col","column","z","ttt","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","then","setRoot","State","f","Transition","Partition","addstate","e"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {State} from './todo';\nimport {Transition} from './todo';\n\n\nexport class App {\n\n  \n\n  constructor() {\n\n  \t/* Initialisation */\n\n    /* Automate initial*/ \n\n    this.heading = \"Enter States\";\n    this.Transitions = \"Add Transitions\";\n    this.states = [];\n    this.stateDescription = '';\n    this.transitions = [];\n    this.start = false ; \n    this.final = false ;\n    this.accepts = [];\n    this.symbols = [];\n\n\n\n\n    this.test = [];\n    this.test2 = [];\n    this.test3 = [];\n    this.gamma =[];\n\n\n    /* Automate déterministe */ \n    this.determinist = null ;\n\n    this.deter_transition = [];\n    this.T = [];\n    this.Q = [];\n    this.Z = [];\n\n    /*Automate AFD à dessiner*/\n    this.AFD_T = new Array();\n    this.AFD_STATE = new Array() ;\n    this.FINALS = new Array() ;\n    this.STARTS = new Array();\n    this.F = new Array();\n    this.S = new Array();\n\n\n    /*Epsilon Fermeture de Chaque état*/\n    this.eps_groupe =[];\n    this.eps_state = [];\n    this.nbr=0;\n\n    this.debug = 0 ;\n\n    /*Minimisation*/\n    this.w= \"\";\n    this.P = new Array();\n    this.finale = new Array();\n    this.etatfinal = new Array();\n    this.etatinit = new Array();\n  }\n\n  addState() {\n  \t\t\t\t// State should be unique // fix it after\t\n    if (this.stateDescription) {\n      if(this.final) this.FINALS.push(this.stateDescription);\n      if(this.start) this.S.push(this.stateDescription);\n      this.states.push(new State(this.stateDescription,this.start,this.final));\n      this.stateDescription = '';\n    }\n  }\n\n\n  removeState(state) {\n    let index = this.states.indexOf(state);\n    if (index !== -1) {\n      this.states.splice(index, 1);\n    } \n  }\n\n\n  addTransition() // Suppose that source and target already exist // if not should add them automaticly \n  {\n  \tif (this.transitionSymbole && this.transitionSource && this.transitionTarget) {\n      this.transitions.push(new Transition (this.transitionSource,this.transitionSymbole,this.transitionTarget));\n      // Add the symbol to the list of symbols\n\n      var test = true; \n\n      for(var i = 0; i < this.symbols.length ; i++)\n      {\n        if(this.symbols[i] == this.transitionSymbole)\n          test = false;\n      }\n\n      if(test)\n      this.symbols.push(this.transitionSymbole);\n\n\n      this.transitionSymbole = '';\n      this.transitionSource = '';\n      this.transitionTarget = '';\n    }\n  }\n\n   removeTransition(transition) {\n    let index = this.transitions.indexOf(transition);\n    if (index !== -1) {\n      this.transitions.splice(index, 1);\n    } \n  }\n\n\n  \n\n  state_fermeture(state){\n\n    var tab = [];\n\n    if(!this.eps_groupe.includes(state)) this.eps_groupe.push(state);\n    for(var i=0;i<this.transitions.length;i++){\n      if(this.transitions[i].source==state){\n        if(this.transitions[i].symbole=='eps'){\n              if(!this.eps_groupe.includes(this.transitions[i].target)) \n                this.eps_groupe.push(this.transitions[i].target);\n              if(!tab.includes(this.transitions[i].target)) \n              tab.push(this.transitions[i].target);\n        }\n      }\n    }\n\n    this.groupe_fermeture(tab);\n  }//end state_fermeture\n\n  groupe_fermeture(table){\n    for(var l=0;l<table.length;l++){\n      this.state_fermeture(table[l]);\n    }\n    //var resultat = this.eps_groupe;\n    //return resultat;\n  }\n\n  vider_eps(){\n    while(this.eps_groupe.length > 0) {\n      this.eps_groupe.pop();\n    }\n  }\n\n  /*transformer(){\n    for(var i=0;i<this.eps_groupe.length;i++){\n      for(var j=0;this.states.length;j++){\n        if(this.eps_groupe[i]==this.states[j].description){\n          this.eps_state.push(this.states[j]);\n          j=this.states.length;\n        }\n      }\n    }\n    eps_groupe = [];\n  }*/\n\n  state_place(descr){\n    \n      for(var j=0;this.states.length;j++){\n        if(descr==this.states[j].description){\n          return this.states[j];\n          j=this.states.length;\n        }\n      }\n    \n  }\n\n  /*calculer_epsilon(type,state,tab){\n    switch(type){\n      case 0 : \n              tab=[];state_fermeture(state);break;\n      case 1 : \n              state=null;groupe_fermeture(tab);break;\n    }\n  }*/\n\n\n\n  lancer_programme(){\n    if(this.symbols.includes('eps')) this.dfa_conversion1();\n    else this.dfa_conversion2();\n  }\n\n\n \tdfa_conversion1()\n \t{\n\n    \n    this.start = this.states[0];\n    \n    length = this.states.length;\n\n    this.accepts.push(this.states[length -1]);\n\n\n  \n\n    this.groupe_fermeture(this.S);\n    var groupes = this.eps_groupe.toString();\n    this.debug=1;\n    var state = new State(this.eps_groupe.toString());\n    this.vider_eps();\n    this.T.push(state); \n    this.Q.push(state);\n    this.debug = 2; // Checked\n\n    \n\n    while(this.T.length > 0)\n    {\n\n      var doubles = false ; \n\n      var i=  Math.floor(Math.random()*(this.T.length)); // (Math.random()*100)%(this.T.length);\n\n      var alpha = new State(this.T[i].description); // Un état de T (Ensemble temporaire)\n\n      if(alpha.description.includes(\",\"))\n      {\n        doubles = true;\n        this.gamma = alpha.description.split(\",\");\n      }\n\n    this.debug = 3 ; // Checked\n\n        for(var j=0;j<this.symbols.length;j++)\n        {\n          if(this.symbols[j]!='eps'){\n\n          var beta = []; // L'ensemble des états atteignable par Alpha, avec le symbol courant (symbols[j])\n\n           // Checked \n\n            for(var k=0;k<this.transitions.length;k++) // On vérifie pour toute les transitions \n            {\n\n              if(this.transitions[k].symbole!='eps'){\n                 if(doubles == false)\n                {\n                  if( this.transitions[k].symbole == this.symbols[j] \n                      && (this.transitions[k].source == alpha.description) ) \n                  {\n                      this.state_fermeture(this.transitions[k].target);\n                      beta=this.eps_groupe.slice();\n                      this.vider_eps();\n                  }\n                  this.debug = 4;\n                }\n                else\n                {\n                  for(var m = 0; m<this.gamma.length; m++)\n                  {\n                    if(this.transitions[k].symbole == this.symbols[j] && this.transitions[k].source == this.gamma[m] )\n                    {\n                      this.state_fermeture(this.transitions[k].target);\n                      beta=this.eps_groupe.slice();\n                      this.vider_eps();\n                    }\n                  }\n\n                }\n              } \n            } \n\n          // beta = Create new state : la concaténation des états qu'on peut atteindre à partir d'alpha, avec le symbole courant \n\n\n       \n        if(beta.length != 0)\n          {\n           // Concaténation  \n\n           var beta1 = beta.filter(function(elem, index, self) {\n                return index == self.indexOf(elem);\n            })\n\n\n          var beta_state = new State(beta1.toString());\n\n          this.test3.push(beta_state.description);\n\n\n          var test = true ; // test if beta_state is already included in the Q \n\n         \n         //this.debug = 7; Checked\n           // Si beta n'est pas déjà inclus déjà dans Q \n              // Alors T.push(new state)\n              // Q.push(new state)\n\n\n            for(var l=0;l<this.Q.length;l++)\n            {\n             if(this.Q[l].description == beta_state.description ) \n             {\n              test = false;\n             }\n            }\n\n\n          if(test == true)\n          {\n            this.T.push(beta_state);\n            this.Q.push(beta_state);\n          }\n          \n          //this.debug = 8; Checked\n\n          // Création d'une transition : \n          // Ajouter cette transition à la liste des transitions de l'automate déterministe \n\n          this.deter_transition.push(new Transition(alpha.description,this.symbols[j],beta_state.description));\n\n          //this.debug = 9 ; // Checked\n\n\n         }\n         else\n         {\n           this.test3.push(\"No state\");\n         }\n         \n         }\n        }//end for symbols\n\n      // T.pop(alpha);\n\n       \n      this.T.splice(i, 1);\n\n     // this.debug = 10; // Checked \n\n    }\n\n   // this.determinist = new Automate(Q,Z,deter_transition,null,null);\n\n   \n  this.debug = 11; // Double Checked\n  \n  var dfa_states = new Array();\n  var dfa_trans = new Array();\n\n  for(var j=0;j<this.Q.length;j++){\n      dfa_states.push(new State('S'+j,this.Q[j].start,this.Q[j].final));\n    }\n\n    for(var i=0;i<this.deter_transition.length;i++){\n      for(var k=0;k<this.Q.length;k++){\n        if(this.deter_transition[i].source==this.Q[k].description){\n          for(var l=0;l<this.Q.length;l++){\n            if(this.deter_transition[i].target==this.Q[l].description){\n              dfa_trans.push(new Transition(dfa_states[k].description,this.deter_transition[i].symbole,dfa_states[l].description));\n              l=this.Q.length;\n            }\n          }\n          k=this.Q.length;\n        }    \n      } \n    }\n\n\n    this.AFD_STATE=dfa_states.slice();\n    this.AFD_T=dfa_trans.slice();\n\n    for(var i=0;i<this.Q.length;i++){\n      for(var j=0;j<this.FINALS.length;j++){\n        if(this.Q[i].description.includes(this.FINALS[j])){\n          this.F.push(this.AFD_STATE[i]);\n          j=this.FINALS.length;\n        }\n        else j=this.FINALS.length;\n      }\n    }\n\n    for(var i=0;i<this.Q.length;i++){\n      for(var j=0;j<this.S.length;j++){\n        if(this.Q[i].description.includes(this.S[j])){\n          this.STARTS.push(this.AFD_STATE[i]);\n          j=this.S.length;\n        }\n        else j=this.S.length;\n      }\n    }\n\n \t}\n\n  /**********************************************************************************************/\n  /**********************************************************************************************/\n  /********************************** SANS E-TANSITION*******************************************/\n  /**********************************************************************************************/\n  /**********************************************************************************************/\n  /**********************************************************************************************/\n\n  dfa_conversion2()\n  {\n\n    // Par défaut pour l'instant : Start = first state added, Accept = last state added\n\n    this.start = this.states[0];\n    \n    length = this.states.length;\n\n    this.accepts.push(this.states[length -1]);\n\n\n    // Automate avant transformation \n\n   // this.automate = new Automate (this.states,this.symbols,this.transitions,this.start,this.accepts);\n    \n    // Transformation : A' = (Q,Z,S,q0,F);\n\n   // this.Q = []; // States of determinist automate\n    this.Q.push(new State(this.S.toString())); // Start == 0 \n\n    this.debug =  1; // Checked\n\n    // this.Z = this.symbols; // L'ensemble des symboles \n\n    // deter_transition :  L'ensemble des transactions de l'automate déterministe; \n\n    // T : Ensemble temporaire de nouvelles états formé de sous-ensemble d'état de l'automate initial \n\n    this.T.push(new State(this.S.toString())); \n\n    this.debug = 2; // Checked\n\n    \n\n    while(this.T.length > 0)\n    {\n\n      var doubles = false ; \n\n      var i=  Math.floor(Math.random()*(this.T.length)); // (Math.random()*100)%(this.T.length);\n\n      var alpha = new State(this.T[i].description); // Un état de T (Ensemble temporaire)\n\n      if(alpha.description.includes(\",\"))\n      {\n        doubles = true;\n        this.gamma = alpha.description.split(\",\");\n      }\n\n    //this.debug = 3 ; // Checked\n\n        for(var j=0;j<this.symbols.length;j++)\n        {\n\n          var beta = []; // L'ensemble des états atteignable par Alpha, avec le symbol courant (symbols[j])\n\n          //this.debug = 4; // Checked \n\n\n            for(var k=0;k<this.transitions.length;k++) // On vérifie pour toute les transitions \n            {\n\n                  this.test.push(this.transitions[k].symbole.charCodeAt(0));\n                  this.test2.push(alpha.description);\n\n                  //this.debug = 5; Checked \n\n              if(doubles == false)\n              {\n                if( this.transitions[k].symbole == this.symbols[j] \n                    && (this.transitions[k].source == alpha.description) ) \n                {\n                    //this.debug = 6;\n                    beta.push(this.transitions[k].target);\n                }\n              }\n              else\n              {\n                for(var m = 0; m<this.gamma.length; m++)\n                {\n                  if(this.transitions[k].symbole == this.symbols[j] && this.transitions[k].source == this.gamma[m] )\n                  {\n                    beta.push(this.transitions[k].target);\n                  }\n                }\n\n              }\n                \n        \n            } \n\n          // beta = Create new state : la concaténation des états qu'on peut atteindre à partir d'alpha, avec le symbole courant \n\n\n       \n        if(beta.length != 0)\n          {\n           // Concaténation  \n\n          var beta_state = new State(beta.toString());\n\n          this.test3.push(beta_state.description);\n\n\n          var test = true ; // test if beta_state is already included in the Q \n\n         \n         //this.debug = 7; Checked\n           // Si beta n'est pas déjà inclus déjà dans Q \n              // Alors T.push(new state)\n              // Q.push(new state)\n\n\n            for(var l=0;l<this.Q.length;l++)\n            {\n             if(this.Q[l].description == beta_state.description ) \n             {\n              test = false;\n             }\n            }\n\n\n          if(test == true)\n          {\n            this.T.push(beta_state);\n            this.Q.push(beta_state);\n          }\n          \n          //this.debug = 8; Checked\n\n          // Création d'une transition : \n          // Ajouter cette transition à la liste des transitions de l'automate déterministe \n\n          this.deter_transition.push(new Transition(alpha.description,this.symbols[j],beta_state.description));\n\n          //this.debug = 9 ; // Checked\n\n\n         }\n         else\n         {\n           this.test3.push(\"No state\");\n         }\n         \n         \n        }\n\n      // T.pop(alpha);\n\n       \n      this.T.splice(i, 1);\n\n     // this.debug = 10; // Checked \n\n    }\n\n   // this.determinist = new Automate(Q,Z,deter_transition,null,null);\n\n   \n  this.debug = 11; // Double Checked\n\n\n  var dfa_states = new Array();\n  var dfa_trans = new Array();\n\n  for(var j=0;j<this.Q.length;j++){\n      dfa_states.push(new State('S'+j,this.Q[j].start,this.Q[j].final));\n    }\n\n    for(var i=0;i<this.deter_transition.length;i++){\n      for(var k=0;k<this.Q.length;k++){\n        if(this.deter_transition[i].source==this.Q[k].description){\n          for(var l=0;l<this.Q.length;l++){\n            if(this.deter_transition[i].target==this.Q[l].description){\n              dfa_trans.push(new Transition(dfa_states[k].description,this.deter_transition[i].symbole,dfa_states[l].description));\n              l=this.Q.length;\n            }\n          }\n          k=this.Q.length;\n        }    \n      } \n    }\n\n\n    this.AFD_STATE=dfa_states.slice();\n    this.AFD_T=dfa_trans.slice();\n\n    for(var i=0;i<this.Q.length;i++){\n      for(var j=0;j<this.FINALS.length;j++){\n        if(this.Q[i].description.includes(this.FINALS[j])){\n          this.F.push(this.AFD_STATE[i]);\n          j=this.FINALS.length;\n        }\n        else j=this.FINALS.length;\n      }\n    }\n\n    for(var i=0;i<this.Q.length;i++){\n      for(var j=0;j<this.S.length;j++){\n        if(this.Q[i].description.includes(this.S[j])){\n          this.STARTS.push(this.AFD_STATE[i]);\n          j=this.S.length;\n        }\n        else j=this.S.length;\n      }\n    }\n\n  }\n\n  /***************************************************************************************/\n  /************************************** Minimisation ***********************************/\n  /***************************************************************************************/\n\n    minimization() {\n    \n    \n    var pos = new Array();\n    var ts = 0;\n    \n    var nbrpar = 0;\n    var t=false;\n    var state;\n    this.P[0]= new Array();\n    this.P[1]= new Array();\n\n\n    for(state of this.states) {\n      if(!(state.final)) {\n        \n        this.P[0].push(state.description);\n        \n      } else {\n        \n        this.P[1].push(state.description);\n        \n      }\n    }\n    pos.push([0,0]);\n    pos.push([1,1]);\n\n  for(state of this.states) {\n    this.s++;\n    nbrpar=this.P.length;\n    this.deb=1;\n\n    for(var j=0;j<nbrpar;j++) { //parcourir les lignes de P\n      this.deb=2;\n      var par = [];\n      par=this.P[j].slice();\n\n      for(var i=0;i<this.P[j].length;i++) { //parcourir les colonnes de P (partition)\n        this.deb=3;\n\n        for(var k=0;k<this.transitions.length;k++) { //parcourir les transitions\n          this.deb=4;\n          \n          if(par[i]==this.transitions[k].source) {\n            this.deb=5;\n\n            if(!(par.includes(this.transitions[k].target))) {\n\n              this.deb=6;\n              for(var n=0;n<nbrpar;n++) { //parcourir P pour chercher s'il y a des partitions qui on la meme target\n                if(this.getCol(this.P,n).includes(this.transitions[k].target)) {\n\n                  this.deb=7;\n                  for(var q=2;q<pos.length;q++) //parcourir la table pos pour trouver la patition qui a la meme target\n                    if(pos[q][1]==n) {\n                      this.deb=8;\n                      if(!(this.P[q].includes(par[i]))) {\n                        this.P[q].push(par[i]);\n                        this.P[j].splice(i,1);\n                        t=true;\n                      }\n                    }\n                }\n              }\n\n              if(t==false) {\n                    this.deb=9;\n                    this.P[nbrpar]= new Array();\n                    this.P[nbrpar].push(par[i]);\n                      this.P[j].splice(i,1);\n                      for(var n=0;n<nbrpar;n++) {//parcourir P pour chercher s'il y a des partitions qui on la meme target\n                        ts=this.transitions[k].target;\n                        if(this.getCol(this.P,n).includes(this.transitions[k].target)) \n                          pos.push([nbrpar,n]);\n                      }\n                    \n              } else\n                this.deb=10;\n            }\n          }\n        }\n      }\n    }\n  }\n\n   for(var i=0;i<this.P.length;i++){\n      this.finale.push(this.P[i].toString());\n    }\n\n    for(var i=0;i<this.finale.length;i++)\n      for (state of states)\n        if(state.final)\n          if(finale[i].includes(state.description)) {\n            this.etatfinal.push(finale[i]);\n            this.finale.splice(i,1);\n          }\n\n    for(var i=0;i<this.finale.length;i++)\n      for (state of states)\n        if(state.start)\n          if(finale[i].includes(state.description)) {\n            this.etatinit.push(finale[i]);\n            this.finale.splice(i,1);\n          }\n\n    \n\n  }\n\n  getCol(matrix, col){\n       var column = [];\n       for(var z=0; z<matrix[col].length; z++){\n          //if(typeof matrix[z][col] != 'undefined')\n          var ttt=matrix[col][z];\n            column.push(matrix[col][z]);\n       }\n       return column;\n    }\n\n  \n\n\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","    \r\n\r\nexport class State {\r\n  constructor(description,s,f) {\r\n    this.description = description;\r\n    this.start = s ;  \r\n    this.final = f ;\r\n  }\r\n}\r\n\r\nexport class Transition{\r\n\tconstructor(source,symbole,target)\r\n\t{\r\n\t\tthis.symbole = symbole;\r\n\t\tthis.source = source ;\r\n\t\tthis.target = target; \r\n\t}\r\n}\r\n\r\n\r\n\r\nexport class Partition {\r\n  constructor(description) {\r\n    this.description = description;\r\n  }\r\n  addstate(e) {\r\n  \tthis.table.push(e);\r\n  }\r\n}\r\n\r\n\r\n  ","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null],"sourceRoot":"../src"}